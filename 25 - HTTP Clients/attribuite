## üì¶ C√°c Tr∆∞·ªùng v√† Ph∆∞∆°ng Th·ª©c c·ªßa `http.Response` trong Go

G√≥i `net/http` trong Go ƒë·ªãnh nghƒ©a struct `http.Response`, ƒë·∫°i di·ªán cho ph·∫£n h·ªìi HTTP t·ª´ server. D∆∞·ªõi ƒë√¢y l√† c√°c tr∆∞·ªùng v√† ph∆∞∆°ng th·ª©c quan tr·ªçng:

---

### üîç Tr∆∞·ªùng ph·ªï bi·∫øn

| Tr∆∞·ªùng             | Ki·ªÉu d·ªØ li·ªáu           | M√¥ t·∫£                                                |
| ------------------ | ---------------------- | ---------------------------------------------------- |
| `StatusCode`       | `int`                  | M√£ tr·∫°ng th√°i HTTP (vd: `200`, `404`)                |
| `Status`           | `string`               | Chu·ªói m√¥ t·∫£ tr·∫°ng th√°i (vd: "200 OK")                |
| `Proto`            | `string`               | Phi√™n b·∫£n HTTP (vd: "HTTP/1.1")                      |
| `Header`           | `map[string][]string`  | Header c·ªßa response                                  |
| `Body`             | `io.ReadCloser`        | D·ªØ li·ªáu th√¢n response, c·∫ßn `defer resp.Body.Close()` |
| `Trailer`          | `map[string][]string`  | Header ·ªü ph·∫ßn trailer (sau body)                     |
| `ContentLength`    | `int64`                | ƒê·ªô d√†i n·ªôi dung n·∫øu c√≥ header Content-Length         |
| `TransferEncoding` | `[]string`             | C√°c ph∆∞∆°ng ph√°p m√£ h√≥a (vd: chunked)                 |
| `Close`            | `bool`                 | `true` n·∫øu server mu·ªën ƒë√≥ng k·∫øt n·ªëi                  |
| `Uncompressed`     | `bool`                 | `true` n·∫øu n·ªôi dung ƒë√£ ƒë∆∞·ª£c gi·∫£i n√©n                 |
| `Request`          | `*http.Request`        | Request ƒë√£ sinh ra response n√†y                      |
| `TLS`              | `*tls.ConnectionState` | Th√¥ng tin k·∫øt n·ªëi b·∫£o m·∫≠t n·∫øu d√πng HTTPS             |

---

### üß∞ Ph∆∞∆°ng th·ª©c h·ªØu √≠ch

| Ph∆∞∆°ng th·ª©c        | M√¥ t·∫£                                                          |
| ------------------ | -------------------------------------------------------------- |
| `Cookies()`        | Tr·∫£ v·ªÅ slice `[]*http.Cookie` t·ª´ header Set-Cookie             |
| `Location()`       | Tr·∫£ v·ªÅ gi√° tr·ªã header Location (cho redirect), ki·ªÉu `*url.URL` |
| `Write(io.Writer)` | Ghi th√¥ng tin response ra writer (vd: os.Stdout)               |

---

### üìå L∆∞u √Ω khi x·ª≠ l√Ω Response

* Lu√¥n g·ªçi `defer resp.Body.Close()` ƒë·ªÉ gi·∫£i ph√≥ng t√†i nguy√™n.
* D√πng `io.ReadAll(resp.Body)` ho·∫∑c `json.NewDecoder(resp.Body)` ƒë·ªÉ ƒë·ªçc n·ªôi dung.
* Ki·ªÉm tra `resp.StatusCode` ƒë·ªÉ x·ª≠ l√Ω l·ªói ho·∫∑c logic t∆∞∆°ng ·ª©ng.
* D√πng `Header.Get("Content-Type")` ƒë·ªÉ ki·ªÉm tra ƒë·ªãnh d·∫°ng tr·∫£ v·ªÅ.

---

‚úÖ File n√†y m√¥ t·∫£ chi ti·∫øt v·ªÅ c√°ch s·ª≠ d·ª•ng `http.Response` ƒë·ªÉ l√†m vi·ªác v·ªõi ph·∫£n h·ªìi t·ª´ HTTP server.
